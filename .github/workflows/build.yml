name: Test Build Deploy

on:
  push:
    branches: [ "terraform" ]

    jobs:
      Initialize-S3:
        runs-on: ubuntu-latest
        environment: dev

        env:
          working-directory: ./terraform/s3
        defaults:
          run:
            working-directory: ${{ env.working-directory }}
            shell: bash
steps:
  - name: Checkout
    uses: actions/checkout@v3

  - name: Configure AWS Credentials
    uses: aws-actions/configure-aws-credentials@v2
    with:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws-region: us-east-1

  - name: Terraform Init
    run: terraform init

  - name: Terraform Plan
    run: terraform plan -input=false

  - name: Terraform Apply
    run: terraform apply -auto-approve


Initialize-EC2:
    runs-on: ubuntu-latest
    environment: dev
    needs: Initialize-S3

    env:
      working-directory: ./terraform/ec2
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
        shell: bash

    outputs:
      public_ip: ${{steps.ip_address.outputs.ip}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Export IP Address to environment variable
        id: ip_address
        run: echo ip=$(terraform output public_ip | sed "s/\"//g") >> $GITHUB_OUTPUT

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Test
        run: cd esop_trading && ./gradlew test

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Build
        run: cd esop_trading && ./gradlew build
      - name: Copy jar file to artifacts
        uses: actions/upload-artifact@v3
        with:

          name: esop-trading-1.0
          path: cd esop_trading && build/libs/esop_0.1-all.jar

  terraform:
    name: "Terraform Pipeline"
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.2.0"

      - name: Terraform Init
        run: terraform init

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false


